# This is a basic workflow to help you get started with Actions

name: UmbracoDevOps

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./src/UmbracoDevOps.sln
  WEBSITEPROJ_FILE_PATH: ./src/UmbracoDevOps.Web/UmbracoDevOps.Web.csproj

  BUILD_CONFIGURATION: Release
  PACKAGE_NAME: ./umbracodevops.zip
  
  RESOURCE_GROUP: rg-umbracodevops
  ARM_TEMPLATE_FILE_PATH: ./ARM-templates/UmbracoDevOps.json
  ARM_TEMPLATE_PARAMS_FILE_PATH: ./ARM-templates/UmbracoDevOps.parameters.dev.json
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        
      - name: Restore NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /T:Package /P:PackageLocation=${{env.PACKAGE_NAME}} /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.WEBSITEPROJ_FILE_PATH}}
        
      - name: Azure login
        uses: Azure/login@v1.4.0
        with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
         
         
      - name: ARM Template deployment
        uses: azure/arm-deploy@v1
        id: deploy
        with:
          resourceGroupName: ${{env.RESOURCE_GROUP}}
          template: ${{env.ARM_TEMPLATE_FILE_PATH}}
          parameters: ${{env.ARM_TEMPLATE_PARAMS_FILE_PATH}} dbAdministratorLoginPassword=${{ secrets.SQL_SERVER }}
          deploymentName: deployment-from-actions
          
      - run: echo ${{ toJSON(steps.deploy.outputs) }}

